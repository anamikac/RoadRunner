Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Mine/learn/RoadRunner/node_modules/react-native-camera-roll-picker/ImageItem.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  ImageItem: {
    displayName: 'ImageItem'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Mine/learn/RoadRunner/node_modules/react-native-camera-roll-picker/ImageItem.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var ImageItem = _wrapComponent('ImageItem')(function (_Component) {
  _inherits(ImageItem, _Component);

  function ImageItem(props) {
    _classCallCheck(this, ImageItem);

    return _possibleConstructorReturn(this, (ImageItem.__proto__ || Object.getPrototypeOf(ImageItem)).call(this, props));
  }

  _createClass(ImageItem, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _Dimensions$get = _reactNative.Dimensions.get('window'),
          width = _Dimensions$get.width;

      var _props = this.props,
          imageMargin = _props.imageMargin,
          imagesPerRow = _props.imagesPerRow,
          containerWidth = _props.containerWidth;


      if (typeof containerWidth != "undefined") {
        width = containerWidth;
      }
      this._imageSize = (width - (imagesPerRow + 1) * imageMargin) / imagesPerRow;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props2 = this.props,
          item = _props2.item,
          selected = _props2.selected,
          selectedMarker = _props2.selectedMarker,
          imageMargin = _props2.imageMargin;


      var marker = selectedMarker ? selectedMarker : _react3.default.createElement(_reactNative.Image, {
        style: [styles.marker, { width: 25, height: 25 }],
        source: require('./circle-check.png'),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 29
        }
      });

      var image = item.node.image;

      return _react3.default.createElement(
        _reactNative.TouchableOpacity,
        {
          style: { marginBottom: imageMargin, marginRight: imageMargin },
          onPress: function onPress() {
            return _this2._handleClick(image);
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 37
          }
        },
        _react3.default.createElement(_reactNative.Image, {
          source: { uri: image.uri },
          style: { height: this._imageSize, width: this._imageSize }, __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        }),
        selected ? marker : null
      );
    }
  }, {
    key: '_handleClick',
    value: function _handleClick(item) {
      this.props.onClick(item);
    }
  }]);

  return ImageItem;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
  marker: {
    position: 'absolute',
    top: 5,
    right: 5,
    backgroundColor: 'transparent'
  }
});

ImageItem.defaultProps = {
  item: {},
  selected: false
};

ImageItem.propTypes = {
  item: _propTypes2.default.object,
  selected: _propTypes2.default.bool,
  selectedMarker: _propTypes2.default.element,
  imageMargin: _propTypes2.default.number,
  imagesPerRow: _propTypes2.default.number,
  onClick: _propTypes2.default.func
};

exports.default = ImageItem;