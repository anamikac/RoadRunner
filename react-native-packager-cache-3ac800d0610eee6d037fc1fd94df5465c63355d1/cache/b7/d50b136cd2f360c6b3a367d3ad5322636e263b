Object.defineProperty(exports, "__esModule", {
	value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Mine/learn/RoadRunner/js/SecondScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _reactNativeRouterFlux = require('react-native-router-flux');

var _leftArrow = require('../images/left-arrow.png');

var _leftArrow2 = _interopRequireDefault(_leftArrow);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
	SecondScreen: {
		displayName: 'SecondScreen'
	}
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
	filename: '/Mine/learn/RoadRunner/js/SecondScreen.js',
	components: _components,
	locals: [module],
	imports: [_react3.default]
});

function _wrapComponent(id) {
	return function (Component) {
		return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
	};
}

var SIZE = 40;

var SecondScreen = _wrapComponent('SecondScreen')(function (_Component) {
	_inherits(SecondScreen, _Component);

	function SecondScreen() {
		_classCallCheck(this, SecondScreen);

		var _this = _possibleConstructorReturn(this, (SecondScreen.__proto__ || Object.getPrototypeOf(SecondScreen)).call(this));

		_this.state = {
			isLoading: false
		};

		_this._onPress = _this._onPress.bind(_this);
		_this.growAnimated = new _reactNative.Animated.Value(0);
		return _this;
	}

	_createClass(SecondScreen, [{
		key: '_onPress',
		value: function _onPress() {
			if (this.state.isLoading) return;

			this.setState({ isLoading: true });

			_reactNative.Animated.timing(this.growAnimated, {
				toValue: 1,
				duration: 300,
				easing: _reactNative.Easing.linear
			}).start();

			setTimeout(function () {
				_reactNativeRouterFlux.Actions.pop();
			}, 500);
		}
	}, {
		key: 'render',
		value: function render() {
			var changeScale = this.growAnimated.interpolate({
				inputRange: [0, 1],
				outputRange: [1, SIZE]
			});

			return _react3.default.createElement(
				_reactNative.View,
				{ style: styles.container, __source: {
						fileName: _jsxFileName,
						lineNumber: 54
					}
				},
				_react3.default.createElement(
					_reactNative.TouchableOpacity,
					{ onPress: this._onPress,
						style: styles.button,
						activeOpacity: 1, __source: {
							fileName: _jsxFileName,
							lineNumber: 55
						}
					},
					_react3.default.createElement(_reactNative.Image, { style: styles.image, source: _leftArrow2.default, __source: {
							fileName: _jsxFileName,
							lineNumber: 58
						}
					})
				),
				_react3.default.createElement(_reactNative.Animated.View, { style: [styles.circle, { transform: [{ scale: changeScale }] }], __source: {
						fileName: _jsxFileName,
						lineNumber: 60
					}
				})
			);
		}
	}]);

	return SecondScreen;
}(_react2.Component));

exports.default = SecondScreen;


var styles = _reactNative.StyleSheet.create({
	container: {
		flex: 1,
		margin: 20,
		alignItems: 'flex-end',
		justifyContent: 'flex-end'
	},
	button: {
		alignItems: 'center',
		justifyContent: 'center',
		width: SIZE,
		height: SIZE,
		borderRadius: 100,
		zIndex: 99,
		backgroundColor: '#F035E0'
	},
	circle: {
		height: SIZE,
		width: SIZE,
		marginTop: -SIZE,
		borderRadius: 100,
		backgroundColor: '#F035E0'
	},
	image: {
		width: 24,
		height: 24
	}
});